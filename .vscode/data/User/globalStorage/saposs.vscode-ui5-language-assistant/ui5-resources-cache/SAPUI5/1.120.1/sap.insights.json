{"$schema-ref":"http://schemas.sap.com/sapui5/designtime/api.json/1.0","version":"1.120.0","library":"sap.insights","symbols":[{"kind":"namespace","name":"sap.insights","basename":"insights","resource":"sap/insights/library.js","module":"sap/insights/library","export":"","static":true,"visibility":"public","description":"SAP UI library: sap.insights"},{"kind":"namespace","name":"sap.insights.CardHelper","basename":"CardHelper","resource":"sap/insights/CardHelper.js","module":"sap/insights/CardHelper","export":"","static":true,"visibility":"public","since":"1.102","description":"Provides functionality for Insight cards CRUD operations.","experimental":{"since":"1.102"}},{"kind":"interface","name":"sap.insights.CardHelperService","basename":"CardHelperService","resource":"sap/insights/CardHelper.js","module":"sap/insights/CardHelper","static":true,"visibility":"public","description":"Public (experimental) interface of the sap.insights.CardHelperService","experimental":{},"methods":[{"name":"showCardPreview","visibility":"public","static":true,"returnValue":{"type":"Promise<void>","description":"Returns promise, which generates preview for the passed card manifest"},"parameters":[{"name":"oCard","type":"object","optional":false,"description":"card manifest for which preview will be generated"},{"name":"bTransform","type":"boolean","optional":false,"description":"boolean to determine whether card can be transfrormed"},{"name":"oCardMessageInfo","type":"object","optional":false,"description":"object which includes type and message text related to Message"},{"name":"sConfirmButtonText","type":"string","optional":false,"description":"text for confirm button on the dialog"},{"name":"onConfirm","type":"function","optional":false,"description":"callback event to be called when confirm button is pressed"}],"description":"Show preview for a given card","experimental":{}}]},{"kind":"class","name":"sap.insights.CardsChannel","basename":"CardsChannel","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","export":"","static":true,"visibility":"public","extends":"sap.ui.base.Object","experimental":{},"ui5-metadata":{"stereotype":"object"},"constructor":{"visibility":"public","description":"Provides a communication between card providers and consumers in FLP and included iframes."},"methods":[{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.insights.CardsChannel with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.base.Metadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.insights.CardsChannel."},{"name":"init","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"description":"Initialize the CardsChannel either with the FLP message broker or an internal implementation for iframes.","experimental":{}},{"name":"isEnabled","visibility":"public","returnValue":{"type":"boolean","description":"true if the broker is enabled"},"description":"Checks if the broker is enabled.","experimental":{}},{"name":"publishAvailableCards","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"parameters":[{"name":"providerId","type":"string","optional":false,"description":"."},{"name":"cardInfos","type":"sap.insights.CardsChannel.CardInfo[]","optional":false,"description":"."},{"name":"consumerId","type":"string","optional":false,"description":"."}],"description":"Send a list of all available cards to a given consumer or broadcast it to all consumers.","experimental":{}},{"name":"publishCard","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"parameters":[{"name":"providerId","type":"string","optional":false,"description":"."},{"name":"card","type":"sap.insights.CardsChannel.Card","optional":false,"description":"."},{"name":"consumerId","type":"string","optional":true,"description":"."}],"description":"Send a card to a given consumer or broadcast it to all consumers.","experimental":{}},{"name":"registerConsumer","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"parameters":[{"name":"id","type":"string","optional":false,"description":"Unique id of the consumer"},{"name":"consumer","type":"sap.insights.ICardConsumer","optional":false,"description":"Implementation of the consumer"}],"description":"Register a card consumer with a unique id. The consumer will be notified through its callback when corresponding messages are received.","experimental":{}},{"name":"registerProvider","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"parameters":[{"name":"id","type":"string","optional":false,"description":"Unique id of the provider"},{"name":"provider","type":"sap.insights.ICardProvider","optional":false,"description":"Object implementing the ICardProvider interface"}],"description":"Register a card provider with a unique id. The provider will be notified if new consumers get registered.","experimental":{}},{"name":"requestCard","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"parameters":[{"name":"consumerId","type":"string","optional":false,"description":"."},{"name":"cardId","type":"string","optional":false,"description":"."},{"name":"providerId","type":"string","optional":false,"description":"."}],"description":"Request a card from a given provider.","experimental":{}},{"name":"unregister","visibility":"public","returnValue":{"type":"Promise<void>","description":"."},"parameters":[{"name":"id","type":"string","optional":false,"description":"."}],"description":"Unregister a previously registered consumer or provider.","experimental":{}}]},{"kind":"typedef","name":"sap.insights.CardsChannel.Card","basename":"Card","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"The card object","experimental":{},"properties":[{"name":"id","type":"string","optional":false,"visibility":"public","description":"Unique identifier for the card."},{"name":"descriptorContent","type":"Object","optional":false,"visibility":"public","description":"manifest of the card."}]},{"kind":"typedef","name":"sap.insights.CardsChannel.CardInfo","basename":"CardInfo","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"The cardInfo object","experimental":{},"properties":[{"name":"id","type":"string","optional":false,"visibility":"public","description":"Unique identifier for the card."},{"name":"title","type":"string","optional":false,"visibility":"public","description":"Title of the card."},{"name":"parentAppId","type":"string","optional":false,"visibility":"public","description":"Id of the parent app."}]},{"kind":"interface","name":"sap.insights.ICardConsumer","basename":"ICardConsumer","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"Interface required for classes that would like to consume cards using the <code>sap.insights.CardsChannel</code>.","experimental":{},"methods":[{"name":"onCardProvided","visibility":"public","static":true,"parameters":[{"name":"providerId","type":"string","optional":false,"description":"Unique id of the ICardsProvider that offers cards"},{"name":"card","type":"object","optional":false}],"description":"Callback when a card is created for this consumer.","experimental":{}},{"name":"onCardsAvailable","visibility":"public","static":true,"parameters":[{"name":"providerId","type":"string","optional":false,"description":"Unique id of the ICardsProvider that offers cards"},{"name":"cardInfos","type":"object[]","optional":false,"description":"Array of simple objects with card information"}],"description":"Callback when cards are available.","experimental":{}}]},{"kind":"interface","name":"sap.insights.ICardProvider","basename":"ICardProvider","resource":"sap/insights/CardsChannel.js","module":"sap/insights/CardsChannel","static":true,"visibility":"public","description":"Interface required for classes that would like to provide cards using the <code>sap.insights.CardsChannel</code>.","experimental":{},"methods":[{"name":"onCardRequested","visibility":"public","static":true,"parameters":[{"name":"consumerId","type":"string","optional":false,"description":"Unique id of the ICardsConsumer that offers cards"},{"name":"cardId","type":"string","optional":false,"description":"Unique id of a card"}],"description":"Callback when a consumer requests a specific card.","experimental":{}},{"name":"onConsumerConnected","visibility":"public","static":true,"parameters":[{"name":"consumerId","type":"string","optional":false,"description":"Unique id of the ICardsConsumer that offers cards"}],"description":"Callback when a consumer is connected.","experimental":{}},{"name":"onConsumerDisconnected","visibility":"public","static":true,"parameters":[{"name":"consumerId","type":"string","optional":false,"description":"Unique id of the ICardsConsumer that offers cards"}],"description":"Callback when a consumer is disconnected.","experimental":{}}]},{"kind":"class","name":"sap.insights.ManageCards","basename":"ManageCards","resource":"sap/insights/ManageCards.js","module":"sap/insights/ManageCards","export":"","static":true,"visibility":"public","since":"1.119","extends":"sap.ui.core.Control","description":"This control shows list of all user cards and allows perform actions like change visibility, change order. It also allows user to get preview of particular card, delete or copy.","ui5-metadata":{"stereotype":"control","properties":[{"name":"enableResetAllCards","type":"boolean","defaultValue":false,"group":"Behavior","visibility":"public","description":"Sets enableResetAllCards property","methods":["getEnableResetAllCards","setEnableResetAllCards"]},{"name":"cardId","type":"string","defaultValue":null,"group":"Behavior","visibility":"public","description":"Sets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered","methods":["getCardId","setCardId"]}],"aggregations":[{"name":"_navContainer","singularName":"_navContainer","type":"sap.m.NavContainer","cardinality":"0..1","visibility":"hidden","methods":["get_navContainer","destroy_navContainer","set_navContainer"]}]},"constructor":{"visibility":"public","description":"Constructor for ManageCards."},"methods":[{"name":"extend","visibility":"public","static":true,"returnValue":{"type":"function","description":"Created class / constructor function"},"parameters":[{"name":"sClassName","type":"string","optional":false,"description":"Name of the class being created"},{"name":"oClassInfo","type":"object","optional":true,"description":"Object literal with information about the class"},{"name":"FNMetaImpl","type":"function","optional":true,"description":"Constructor function for the metadata object; if not given, it defaults to the metadata implementation used by this class"}],"description":"Creates a new subclass of class sap.insights.ManageCards with name <code>sClassName</code> and enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."},{"name":"getCardId","visibility":"public","returnValue":{"type":"string","description":"Value of property <code>cardId</code>"},"description":"Gets current value of property {@link #getCardId cardId}.\n\nSets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered"},{"name":"getEnableResetAllCards","visibility":"public","returnValue":{"type":"boolean","description":"Value of property <code>enableResetAllCards</code>"},"description":"Gets current value of property {@link #getEnableResetAllCards enableResetAllCards}.\n\nSets enableResetAllCards property\n\nDefault value is <code>false</code>."},{"name":"getMetadata","visibility":"public","static":true,"returnValue":{"type":"sap.ui.core.ElementMetadata","description":"Metadata object describing this class"},"description":"Returns a metadata object for class sap.insights.ManageCards."},{"name":"setCardId","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"sCardId","type":"string","optional":true,"defaultValue":null,"description":"New value for property <code>cardId</code>"}],"description":"Sets a new value for property {@link #getCardId cardId}.\n\nSets the cardId property which decides whether to render the details page or cardlist page, if cardId is provided , cardDetails page is rendered\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."},{"name":"setEnableResetAllCards","visibility":"public","returnValue":{"type":"this","description":"Reference to <code>this</code> in order to allow method chaining"},"parameters":[{"name":"bEnableResetAllCards","type":"boolean","optional":true,"defaultValue":false,"description":"New value for property <code>enableResetAllCards</code>"}],"description":"Sets a new value for property {@link #getEnableResetAllCards enableResetAllCards}.\n\nSets enableResetAllCards property\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>."}]}]}
