/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/Log"],function(e){"use strict";const t={getSemanticKeys:function(e,t){return e.getObject(`/${t}/@com.sap.vocabularies.Common.v1.SemanticKey`)},getSemanticObjectInformation:function(e,t){const n=e.getObject(`/${t}/@com.sap.vocabularies.Common.v1.SemanticObject`);const i=this.getSemanticKeys(e,t);return{semanticObject:n,semanticKeys:i}},getSemanticPath:function(t){let n=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const i=t.getModel().getMetaModel(),a=i.getMetaContext(t.getPath()).getObject("@sapui.name"),o=this.getSemanticObjectInformation(i,a);let c,s;if(t.isA("sap.ui.model.odata.v4.ODataListBinding")&&t.isRelative()){c=t.getHeaderContext().getPath()}else{c=t.getPath()}if(this._isPathForSemantic(c)&&o.semanticKeys){const n=o.semanticKeys,c=i.getObject(`/${i.getObject(`/${a}`).$Type}`);try{const e=n.map(function(e){const i=e.$PropertyPath;let a=t.getProperty(i);if(a===undefined||a===null){throw new Error(`Couldn't resolve semantic key value for ${i}`)}else{if(c[i].$Type==="Edm.String"){a=`'${encodeURIComponent(a)}'`}if(n.length>1){a=`${i}=${a}`}return a}}).join(",");s=`/${a}(${e})`}catch(t){e.info(t)}}return n?s:s||c},_isPathForSemantic:function(e){return/^[^()]+\([^()]+\)$/.test(e)}};return t},false);
//# sourceMappingURL=SemanticKeyHelper.js.map